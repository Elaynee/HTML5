<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>###	Decode Numeric Entities:  Experimental. May not work 100% in every case. If you find problems, please let me know.
### v1.0  2005-04-05
php -r '
#	get the text to decode
$selTxt = file_get_contents("/dev/stdin");
# decode the stuff
echo preg_replace_callback( "/&amp;#([0-9a-fx]+);/mi", "replace_num_entity", $selTxt );

# php function used. Taken from http://us3.php.net/manual/en/function.html-entity-decode.php
function replace_num_entity($ord)
{
	$ord = $ord[1];
	if (preg_match("/^x([0-9a-f]+)$/i", $ord, $match)){
		$ord = hexdec($match[1]);
	}else{
		$ord = intval($ord);
	}
	$no_bytes = 0;
	$byte = array();
	if ($ord &lt; 128 ) { 
		return chr($ord);
	}elseif ($ord &lt; 2048){
		$no_bytes = 2;
	}elseif ($ord &lt; 65536){
		$no_bytes = 3;
	}elseif ($ord &lt; 1114112){
		$no_bytes = 4;
	}else{
		return;
	}
	switch($no_bytes){
		case 2:
			$prefix = array(31, 192);
		break;
		case 3:
			$prefix = array(15, 224);
		break;
		case 4:
			$prefix = array(7, 240);
		break;
	}	
	for ($i = 0; $i &lt; $no_bytes; $i++){
		$byte[$no_bytes - $i - 1] = (($ord &amp; (63 * pow(2, 6 * $i))) / pow(2, 6 * $i)) &amp; 63 | 128;
	}
	$byte[0] = ($byte[0] &amp; $prefix[0]) | $prefix[1];
	$ret = "";
	for ($i = 0; $i &lt; $no_bytes; $i++){
		$ret .= chr($byte[$i]);
	}
		return $ret;
}
###
'</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>@&amp;</string>
	<key>name</key>
	<string>Decode Numeric Entities</string>
	<key>output</key>
	<string>replaceSelectedText</string>
	<key>scope</key>
	<string>text.html</string>
	<key>uuid</key>
	<string>8B2196E7-A5F3-11D9-ABD6-000D93C8BE28</string>
</dict>
</plist>
